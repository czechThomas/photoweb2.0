{"ast":null,"code":"var _jsxFileName = \"/Users/tomas/Desktop/WebDevelop/photoweb2.0/src/components/PortfolioComponents/PortfolioButton.jsx\",\n  _s = $RefreshSig$();\nimport { Button, styled, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioTypography = styled(Typography)({\n  fontStyle: 'oblique',\n  fontWeight: 'bold',\n  fontSize: '300%',\n  textShadow: '1px 2px 1px grey',\n  color: 'white'\n});\n_c = PortfolioTypography;\nconst PortfolioButton = _ref => {\n  _s();\n  let {\n    windowSize,\n    image,\n    title,\n    path\n  } = _ref;\n  const [hover, setHover] = useState(false);\n  const navigate = useNavigate();\n  const ImageButton = styled(Button)({\n    width: '100%',\n    height: '400px',\n    backgroundImage: `url(/images/${image})`,\n    backgroundSize: 'cover',\n    filter: 'grayscale(100%)',\n    '&:hover': {\n      filter: 'none'\n    }\n  });\n  if (windowSize >= 1050) {\n    return /*#__PURE__*/_jsxDEV(ImageButton, {\n      onMouseOver: () => setHover(true),\n      onMouseLeave: () => setHover(false),\n      onClick: () => navigate(path),\n      children: hover && /*#__PURE__*/_jsxDEV(PortfolioTypography, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(ImageButton, {\n      sx: {\n        filter: 'none'\n      },\n      component: Link,\n      to: path,\n      children: /*#__PURE__*/_jsxDEV(PortfolioTypography, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(PortfolioButton, \"8h7YAF1dIFIqTpsZVUW80XhEMXA=\", false, function () {\n  return [useNavigate];\n});\n_c2 = PortfolioButton;\nexport default PortfolioButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"PortfolioTypography\");\n$RefreshReg$(_c2, \"PortfolioButton\");","map":{"version":3,"names":["Button","styled","Typography","React","useState","Link","useNavigate","jsxDEV","_jsxDEV","PortfolioTypography","fontStyle","fontWeight","fontSize","textShadow","color","_c","PortfolioButton","_ref","_s","windowSize","image","title","path","hover","setHover","navigate","ImageButton","width","height","backgroundImage","backgroundSize","filter","onMouseOver","onMouseLeave","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","component","to","_c2","$RefreshReg$"],"sources":["/Users/tomas/Desktop/WebDevelop/photoweb2.0/src/components/PortfolioComponents/PortfolioButton.jsx"],"sourcesContent":["import { Button, styled, Typography } from '@mui/material';\r\nimport React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst PortfolioTypography = styled(Typography)({\r\n    fontStyle: 'oblique', \r\n    fontWeight: 'bold', \r\n    fontSize: '300%',\r\n    textShadow: '1px 2px 1px grey',\r\n    color: 'white',\r\n})\r\n\r\nconst PortfolioButton = ({ windowSize, image, title, path }) => {\r\n  const [hover, setHover] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const ImageButton = styled(Button)({\r\n    width: '100%',\r\n    height: '400px',\r\n    backgroundImage: `url(/images/${image})`,\r\n    backgroundSize: 'cover',\r\n    filter: 'grayscale(100%)',\r\n    '&:hover': {\r\n        filter: 'none',\r\n    }\r\n});\r\n\r\n  if (windowSize >= 1050) {\r\n    return (\r\n      <ImageButton onMouseOver={() => setHover(true)} onMouseLeave={() => setHover(false)} onClick={() => navigate(path)}>\r\n        {hover && <PortfolioTypography>{title}</PortfolioTypography>}\r\n      </ImageButton>\r\n    )\r\n  } else {\r\n    return (\r\n      <ImageButton sx={{ filter: 'none' }} component={Link} to={path}>\r\n        <PortfolioTypography>{title}</PortfolioTypography>\r\n      </ImageButton>\r\n    )\r\n  }\r\n};\r\n\r\nexport default PortfolioButton;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAC1D,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIrD,MAAMC,mBAAmB,GAAGR,MAAM,CAACC,UAAU,CAAC,CAAC;EAC3CQ,SAAS,EAAE,SAAS;EACpBC,UAAU,EAAE,MAAM;EAClBC,QAAQ,EAAE,MAAM;EAChBC,UAAU,EAAE,kBAAkB;EAC9BC,KAAK,EAAE;AACX,CAAC,CAAC;AAAAC,EAAA,GANIN,mBAAmB;AAQzB,MAAMO,eAAe,GAAGC,IAAA,IAAwC;EAAAC,EAAA;EAAA,IAAvC;IAAEC,UAAU;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAAL,IAAA;EACzD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAMqB,QAAQ,GAAGnB,WAAW,EAAE;EAE9B,MAAMoB,WAAW,GAAGzB,MAAM,CAACD,MAAM,CAAC,CAAC;IACjC2B,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,OAAO;IACfC,eAAe,EAAG,eAAcT,KAAM,GAAE;IACxCU,cAAc,EAAE,OAAO;IACvBC,MAAM,EAAE,iBAAiB;IACzB,SAAS,EAAE;MACPA,MAAM,EAAE;IACZ;EACJ,CAAC,CAAC;EAEA,IAAIZ,UAAU,IAAI,IAAI,EAAE;IACtB,oBACEX,OAAA,CAACkB,WAAW;MAACM,WAAW,EAAEA,CAAA,KAAMR,QAAQ,CAAC,IAAI,CAAE;MAACS,YAAY,EAAEA,CAAA,KAAMT,QAAQ,CAAC,KAAK,CAAE;MAACU,OAAO,EAAEA,CAAA,KAAMT,QAAQ,CAACH,IAAI,CAAE;MAAAa,QAAA,EAChHZ,KAAK,iBAAIf,OAAA,CAACC,mBAAmB;QAAA0B,QAAA,EAAEd;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAuB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChD;EAElB,CAAC,MAAM;IACL,oBACE/B,OAAA,CAACkB,WAAW;MAACc,EAAE,EAAE;QAAET,MAAM,EAAE;MAAO,CAAE;MAACU,SAAS,EAAEpC,IAAK;MAACqC,EAAE,EAAEpB,IAAK;MAAAa,QAAA,eAC7D3B,OAAA,CAACC,mBAAmB;QAAA0B,QAAA,EAAEd;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAuB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtC;EAElB;AACF,CAAC;AAACrB,EAAA,CA5BIF,eAAe;EAAA,QAEFV,WAAW;AAAA;AAAAqC,GAAA,GAFxB3B,eAAe;AA8BrB,eAAeA,eAAe;AAAC,IAAAD,EAAA,EAAA4B,GAAA;AAAAC,YAAA,CAAA7B,EAAA;AAAA6B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}